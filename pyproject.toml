[project]
name = "z3-playground"
version = "0"
readme = "README.md"
requires-python = ">=3.13"
dependencies = ["z3-solver>=4.15.1.0"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    { include-group = "ruff" },
    { include-group = "typing" },
]
ruff = ["ruff>=0.11.13"]
typing = ["mypy>=1.16.1"]

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = ["z3.*"]
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "PLR2004", # magic numbers
    "S101",    # use of assert
    "G",       # logging format
    #     "ANN101",  # missing type annotation for self in method
    #     "ANN102",  # missing type annotation for cls in classmethod
    "D100", # missing docstring in public module
    #     "D101",    # missing docstring in public class
    #     "D102",    # missing docstring in public method
    #     "D103",    # missing docstring in public function
    #     "D104",    # missing docstring in public package
    #     "D105",    # missing docstring in magic method
    #     "D107",    # missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D213", # multi-line docstring summary should start at the second line
    #     "PGH003",  # Use specific rule codes when ignoring type issues
    #     "RET505",  # Unnecessary `else` after `return` statement
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    #     "D401",    # First line should be in imperative mood
    "TD002", # Missing author in TODO
    "TD003", # add link on issue into TODO
    #     "PLR0913", # Too many arguments to function call
    #     "D407",    # Missing dashed underline after section
    #     "ERA001",  # Commented out code
    "T201",    # Use of `print` is not allowed
    "FIX002",  # Fixme comment
    "PLR0915",
    "FBT003",
    #     "S311",    # suspicious-non-cryptographic-random-usage
    #     "EM101",   # raw-string-in-exception
    #     "TRY003",  # Avoid specifying long messages outside the exception class
    # "UP040", # uses `TypeAlias` annotation instead of the `type` keyword. This is to be compatible with griffe.
    "INP001", # implicit-namespace-package
] # Modify the following rules according to your preferences

unfixable = [
    "F401", # Prevent auto-fix for unused imports
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "D",      # Docstring
    "INP001", # implicit-namespace-package
    "ANN201", # missing-return-type-undocumented-public-function
    "S101",   # use of assert
]
